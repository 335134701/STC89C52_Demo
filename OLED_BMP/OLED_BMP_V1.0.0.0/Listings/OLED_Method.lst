C51 COMPILER V9.59.0.0   OLED_METHOD                                                       02/18/2020 22:34:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE OLED_METHOD
OBJECT MODULE PLACED IN .\Objects\OLED_Method.obj
COMPILER INVOKED BY: D:\Keil5\C51\C51\BIN\C51.EXE OLED_Method.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\OLED_Method.lst) OBJECT(.\Objects\OLED_Method.obj)

line level    source

   1          #include "Headers.h"
   2          
   3          /************************************************************************************
   4          *
   5          * 1. void delay(unsigned int z) -- ÑÓÊ±º¯Êý,ºÁÃë
   6          * 2. void IIC_Start() -- ¿ªÆôI2C×ÜÏß
   7          * 3. void IIC_Stop() -- ¹Ø±ÕI2C×ÜÏß
   8          * 4. void Write_IIC_Byte(unsigned char IIC_Byte) -- Í¨¹ýI2C×ÜÏßÐ´Ò»¸öbyteµÄÊý¾Ý
   9          * 5. void OLED_WrDat(unsigned char dat) -- ÏòOLEDÆÁÐ´Êý¾Ý
  10          * 6. void OLED_WrCmd(unsigned char cmd) -- ÏòOLEDÆÁÐ´ÃüÁî
  11          * 7. void OLED_Set_Pos(unsigned char x, unsigned char y) -- ÉèÖÃÏÔÊ¾×ø±ê
  12          * 8. void OLED_Fill(unsigned char bmp_dat) -- È«ÆÁÏÔÊ¾(ÏÔÊ¾BMPÍ¼Æ¬Ê±²Å»áÓÃµ½´Ë¹¦ÄÜ)
  13          * 9. void OLED_CLS(void) -- ¸´Î»/ÇåÆÁ
  14          * 10. void OLED_Init(void) -- OLEDÆÁ³õÊ¼»¯³ÌÐò£¬´Ëº¯ÊýÓ¦ÔÚ²Ù×÷ÆÁÄ»Ö®Ç°×îÏÈµ÷ÓÃ
  15          * 11. void OLED_P6x8Str(unsigned char x, y,unsigned char ch[]) -- 6x8µãÕû£¬ÓÃÓÚÏÔÊ¾ASCIIÂëµÄ×îÐ¡ÕóÁÐ£¬²»Ì«
             -ÇåÎú
  16          * 12. void OLED_P8x16Str(unsigned char x, y,unsigned char ch[]) -- 8x16µãÕû£¬ÓÃÓÚÏÔÊ¾ASCIIÂë£¬·Ç³£ÇåÎú
  17          * 13.void OLED_P16x16Ch(unsigned char x, y, N) -- 16x16µãÕû£¬ÓÃÓÚÏÔÊ¾ºº×ÖµÄ×îÐ¡ÕóÁÐ£¬¿ÉÉèÖÃ¸÷ÖÖ×ÖÌå¡¢¼Ó´Ö¡
             -¢ÇãÐ±¡¢ÏÂ»®ÏßµÈ
  18          * 14.void Draw_BMP(unsigned char x0, y0,x1, y1,unsigned char BMP[]) -- ½«128x64ÏñËØµÄBMPÎ»Í¼ÔÚÈ¡×ÖÈí¼þÖÐËã
             -³ö×Ö±í£¬È»ºó¸´ÖÆµ½codetabÖÐ£¬´Ëº¯Êýµ÷ÓÃ¼´¿É
  19          *
  20          *************************************************************************************/
  21          
  22          /*********************OLEDÇý¶¯³ÌÐòÓÃµÄÑÓÊ±³ÌÐò************************************/
  23          void delay(unsigned int z)
  24          {
  25   1              unsigned int x,y;
  26   1              for(x=z;x>0;x--)
  27   1                      for(y=110;y>0;y--);
  28   1      }
  29          
  30          /**********************************************
  31          //IIC Start
  32          **********************************************/
  33          void IIC_Start()
  34          {
  35   1         SCL = Hight_Voltage;         
  36   1         SDA = Hight_Voltage;
  37   1         SDA = Low_Voltage;
  38   1         SCL = Low_Voltage;
  39   1      }
  40          
  41          /**********************************************
  42          //IIC Stop
  43          **********************************************/
  44          void IIC_Stop()
  45          {
  46   1         SCL = Low_Voltage;
  47   1         SDA = Low_Voltage;
  48   1         SCL = Hight_Voltage;
  49   1         SDA = Hight_Voltage;
  50   1      }
  51          
C51 COMPILER V9.59.0.0   OLED_METHOD                                                       02/18/2020 22:34:07 PAGE 2   

  52          /**********************************************
  53          // Í¨¹ýI2C×ÜÏßÐ´Ò»¸ö×Ö½Ú
  54          **********************************************/
  55          void Write_IIC_Byte(unsigned char IIC_Byte)
  56          {
  57   1              unsigned char i;
  58   1              for(i=0;i<8;i++)
  59   1              {
  60   2                      if(IIC_Byte & 0x80)
  61   2                              SDA=Hight_Voltage;
  62   2                      else
  63   2                              SDA=Low_Voltage;
  64   2                      SCL=Hight_Voltage;
  65   2                      SCL=Low_Voltage;
  66   2                      IIC_Byte<<=1;
  67   2              }
  68   1              SDA=1;
  69   1              SCL=1;
  70   1              SCL=0;
  71   1      }
  72          
  73          /*********************OLEDÐ´Êý¾Ý************************************/ 
  74          void OLED_WrDat(unsigned char IIC_Data)
  75          {
  76   1              IIC_Start();
  77   1              Write_IIC_Byte(0x78);
  78   1              Write_IIC_Byte(0x40);                   //write data
  79   1              Write_IIC_Byte(IIC_Data);
  80   1              IIC_Stop();
  81   1      }
  82          /*********************OLEDÐ´ÃüÁî************************************/
  83          void OLED_WrCmd(unsigned char IIC_Command)
  84          {
  85   1              IIC_Start();
  86   1              Write_IIC_Byte(0x78);            //Slave address,SA0=0
  87   1              Write_IIC_Byte(0x00);                   //write command
  88   1              Write_IIC_Byte(IIC_Command);
  89   1              IIC_Stop();
  90   1      }
  91          /*********************OLED ÉèÖÃ×ø±ê************************************/
  92          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  93          { 
  94   1              OLED_WrCmd(0xb0+y);
  95   1              OLED_WrCmd(((x&0xf0)>>4)|0x10);
  96   1              OLED_WrCmd((x&0x0f)|0x01);
  97   1      } 
  98          /*********************OLEDÈ«ÆÁ************************************/
  99          void OLED_Fill(unsigned char bmp_dat) 
 100          {
 101   1              unsigned char y,x;
 102   1              for(y=0;y<8;y++)
 103   1              {
 104   2                      OLED_WrCmd(0xb0+y);
 105   2                      OLED_WrCmd(0x01);
 106   2                      OLED_WrCmd(0x10);
 107   2                      for(x=0;x<X_WIDTH;x++)
 108   2                      OLED_WrDat(bmp_dat);
 109   2              }
 110   1      }
 111          /*********************OLED¸´Î»************************************/
 112          void OLED_CLS(void)
 113          {
C51 COMPILER V9.59.0.0   OLED_METHOD                                                       02/18/2020 22:34:07 PAGE 3   

 114   1              unsigned char y,x;
 115   1              for(y=0;y<8;y++)
 116   1              {
 117   2                      OLED_WrCmd(0xb0+y);
 118   2                      OLED_WrCmd(0x01);
 119   2                      OLED_WrCmd(0x10);
 120   2                      for(x=0;x<X_WIDTH;x++)
 121   2                      OLED_WrDat(0);
 122   2              }
 123   1      }
 124          /*********************OLED³õÊ¼»¯************************************/
 125          void OLED_Init(void)
 126          {
 127   1              delay(500);//³õÊ¼»¯Ö®Ç°µÄÑÓÊ±ºÜÖØÒª£¡
 128   1              OLED_WrCmd(0xae);//--turn off oled panel
 129   1              OLED_WrCmd(0x00);//---set Low_Voltage column address
 130   1              OLED_WrCmd(0x10);//---set Hight_Voltage column address
 131   1              OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 132   1              OLED_WrCmd(0x81);//--set contrast control register
 133   1              OLED_WrCmd(Brightness); // Set SEG Output Current Brightness
 134   1              OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0×óÓÒ·´ÖÃ 0xa1Õý³£
 135   1              OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0ÉÏÏÂ·´ÖÃ 0xc8Õý³£
 136   1              OLED_WrCmd(0xa6);//--set normal display
 137   1              OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
 138   1              OLED_WrCmd(0x3f);//--1/64 duty
 139   1              OLED_WrCmd(0xd3);//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)
 140   1              OLED_WrCmd(0x00);//-not offset
 141   1              OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
 142   1              OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 143   1              OLED_WrCmd(0xd9);//--set pre-charge period
 144   1              OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 145   1              OLED_WrCmd(0xda);//--set com pins hardware configuration
 146   1              OLED_WrCmd(0x12);
 147   1              OLED_WrCmd(0xdb);//--set vcomh
 148   1              OLED_WrCmd(0x40);//Set VCOM Deselect Level
 149   1              OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 150   1              OLED_WrCmd(0x02);//
 151   1              OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
 152   1              OLED_WrCmd(0x14);//--set(0x10) disable
 153   1              OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 154   1              OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 155   1              OLED_WrCmd(0xaf);//--turn on oled panel
 156   1              OLED_Fill(0x00); //³õÊ¼ÇåÆÁ
 157   1              OLED_Set_Pos(0,0);
 158   1      } 
 159          
 160          /***********¹¦ÄÜÃèÊö£ºÏÔÊ¾ÏÔÊ¾BMPÍ¼Æ¬128¡Á64ÆðÊ¼µã×ø±ê(x,y),xµÄ·¶Î§0¡«127£¬BMP[]Í¼Æ¬Êý×é*****************/
 161          void Draw_BMP(unsigned char x0, y0,x_size, y_size,unsigned char BMP[])
 162          {
 163   1              unsigned int j=0;
 164   1              unsigned char x,y;
 165   1              if(y_size%8==0) y=y_size/8;      
 166   1              else y=y_size/8+1;
 167   1              for(y=y0;y<y_size;y++)
 168   1              {
 169   2                      OLED_Set_Pos(x0,y);
 170   2          for(x=x0;x<x_size;x++)
 171   2                  {      
 172   3                      OLED_WrDat(BMP[j++]);
 173   3                  }
 174   2              }
 175   1      }
C51 COMPILER V9.59.0.0   OLED_METHOD                                                       02/18/2020 22:34:07 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    606    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
